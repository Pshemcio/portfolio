{"version":3,"sources":["Home/Home.jsx","Settings/theme.js","Home/Header.jsx","Components/Buttons.js","Home/Home.styled.js","Components/Inputs.js","Components/Headings.js","Home/About.jsx","Home/Header.styled.js","Settings/base.js","App.js","reportWebVitals.js","index.js"],"names":["Home","Container","Theme","colors","primaryColor","secondaryColor","tertiaryColor","tertiaryColorDark","quaternaryColor","typography","primaryFont","secondaryFont","fontSize","xs","sm","md","lg","xl","breakpoints","structure","paddingMobile","paddingDesktop","Header","useState","isLoaded","setIsLoaded","useEffect","HeaderStyled","SvgWrapper","viewBox","fill","xmlns","id","x2","y2","offset","stopColor","LogoPath","d","loaded","Button","styled","button","props","rounded","toString","pink","css","h1","h2","div","AboutStyled","section","About","header","dash","keyframes","path","GlobalStyle","createGlobalStyle","AppStyled","App","scroll","LocomotiveScroll","el","document","querySelector","lerp","reloadOnContextChange","smooth","smartphone","tablet","console","log","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4bad736a.chunk.js","sourcesContent":["import { Header, About, Container } from './index';\r\nconst Home = () => {\r\n    return (\r\n        <Container>\r\n            <Header></Header>\r\n            <About></About>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home;","const Theme = {\r\n    colors: {\r\n        primaryColor: '#0B2027',\r\n        secondaryColor: '#f2f5ea',\r\n        tertiaryColor: '#1ee5ff',\r\n        tertiaryColorDark: '#1ee5ff1a',\r\n        quaternaryColor: '#e75a7c'\r\n    },\r\n    typography: {\r\n        primaryFont: 'Poppins, Roboto, Helvetica, sans-serif',\r\n        secondaryFont: 'Montserrat, Roboto, Ubuntu, sans-serif'\r\n    },\r\n    fontSize: {\r\n        xs: '14px',\r\n        sm: '18px',\r\n        md: '22px',\r\n        lg: '28px',\r\n        xl: '36px'\r\n    },\r\n    breakpoints: {\r\n        xs: '512px',\r\n        sm: '840px',\r\n        md: '992px',\r\n        lg: '1200px',\r\n        xl: '1366px'\r\n    },\r\n    structure: {\r\n        paddingMobile: '20px',\r\n        paddingDesktop: '10vw'\r\n    }\r\n}\r\n\r\nexport default Theme;","// import { Button, Heading1 } from '../Components/index';\r\nimport { useEffect, useState } from 'react';\r\nimport { HeaderStyled, SvgWrapper, LogoPath } from './index';\r\nimport Theme from '../Settings/theme';\r\n\r\nconst {\r\n    colors: {\r\n        tertiaryColor,\r\n        tertiaryColorDark\r\n    }\r\n} = Theme;\r\n\r\nconst Header = () => {\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsLoaded(true);\r\n    }, [isLoaded])\r\n\r\n    return (\r\n        <HeaderStyled>\r\n            <SvgWrapper>\r\n                <svg viewBox=\"0 0 294 282\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <defs>\r\n                        <linearGradient id=\"header-shape-gradient\" x2=\"0.6\" y2=\".8\">\r\n                            <stop offset=\"0%\" stopColor={tertiaryColor} />\r\n                            <stop offset=\"10%\" stopColor={tertiaryColor} />\r\n                            <stop offset=\"100%\" stopColor={tertiaryColorDark} />\r\n                        </linearGradient>\r\n                    </defs>\r\n                    <LogoPath\r\n                        d=\"M1 280.028H29.1874V35.089L144.853 151.727H146.797L202.2 94.8658C202.2 87.0899 197.826 72.5102 192.48 67.6503L145.825 112.847H144.853L33.0754 1.06966H1V280.028Z\" loaded={isLoaded} />\r\n                    <LogoPath\r\n                        d=\"M138.049 1.06964H50.571H49.599L76.8145 29.2571H138.049C237.677 24.3972 239.135 169.222 138.049 166.306H78.7584V101.184L50.571 72.9962H49.599V281H78.7584V195.466H138.049C275.584 199.84 277.042 -3.30426 138.049 1.06964Z\" loaded={isLoaded} />\r\n                    <LogoPath\r\n                        d=\"M257.603 1.06966L229.415 29.2571C234.761 35.0193 241.079 47.1691 244.481 55.0146L263.435 36.061V281H292.594V1.06966H257.603Z\" loaded={isLoaded} />\r\n                </svg>\r\n            </SvgWrapper>\r\n        </HeaderStyled>\r\n    )\r\n}\r\n\r\nexport default Header;","import styled, { css } from 'styled-components';\r\nimport Theme from '../Settings/theme';\r\n\r\nlet {\r\n    secondaryColor,\r\n    tertiaryColor,\r\n    quaternaryColor\r\n} = Theme.colors;\r\n\r\nconst Button = styled.button`\r\n    padding: 10px 20px;\r\n    background-color: transparent;\r\n    border: 1px solid ${quaternaryColor};\r\n    border-radius: ${(props) =>\r\n        typeof props.rounded === 'number' ? props.rounded.toString() + 'px' : '5px'};\r\n\r\n    ${props =>\r\n        props.pink &&\r\n        css`\r\n        background-color: ${secondaryColor};\r\n        color: ${tertiaryColor}\r\n    `}\r\n`\r\n\r\nexport default Button;","import styled from 'styled-components';\r\nimport Theme from '../Settings/theme';\r\n\r\nconst {\r\n    colors: {\r\n        quaternaryColor\r\n    }\r\n} = Theme;\r\n\r\nexport const Container = styled.div`\r\n    text-align: center;\r\n`;\r\n\r\nexport const AboutStyled = styled.section`\r\n    min-height: 100vh;\r\n    background-color: ${quaternaryColor};\r\n`","import styled from 'styled-components';\r\n\r\nconst Input = styled.button`\r\n    background-color: red;\r\n`\r\n\r\nexport default Input;","import styled, { css } from 'styled-components';\r\n\r\nexport const Heading1 = styled.h1`\r\n    ${props =>\r\n        props.pink &&\r\n        css`\r\n        background-color: pink;\r\n    `}\r\n`;\r\n\r\nexport const Heading2 = styled.h2`\r\n    background-color: red;\r\n`;","import { Button } from '../Components/index';\r\nimport { AboutStyled } from './Home.styled';\r\n\r\nconst About = () => {\r\n    return (\r\n        <AboutStyled>\r\n            <Button>No elo</Button>\r\n        </AboutStyled>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import styled, { css, keyframes } from 'styled-components';\r\nimport Theme from '../Settings/theme';\r\n\r\nconst {\r\n    colors: {\r\n        primaryColor\r\n    }\r\n} = Theme;\r\n\r\nexport const HeaderStyled = styled.header`\r\n    height: 100vh;\r\n    display: grid;\r\n    place-content: center;\r\n    background-color: ${primaryColor};\r\n`\r\n\r\nexport const SvgWrapper = styled.div`\r\n    width: 220px;\r\n`\r\n\r\nconst dash = keyframes`\r\n  to {\r\n        stroke-dashoffset: 0;\r\n    }\r\n`\r\n\r\nconst fill = keyframes`\r\n  to {\r\n        fill-opacity: 1;\r\n        stroke-opacity: .6;\r\n    }\r\n`\r\n\r\nexport const LogoPath = styled.path`\r\n    stroke-dasharray: 1500;\r\n    stroke-dashoffset: 1500;\r\n    stroke: #39C0D2;\r\n    stroke-width: 2;\r\n    fill: url(#header-shape-gradient) #fff;\r\n    fill-opacity: 0;\r\n    \r\n    ${props =>\r\n        props.loaded &&\r\n        css`\r\n        animation: ${dash} 3s .5s cubic-bezier(0.43, 0.29, 0.58, 1.01) forwards, ${fill} .5s 3s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;\r\n    `}\r\n`","import { createGlobalStyle } from 'styled-components';\r\nimport Theme from '../Settings/theme';\r\n\r\nconst {\r\n  typography: {\r\n    primaryFont\r\n  },\r\n  colors: {\r\n    secondaryColor,\r\n    quaternaryColor\r\n  }\r\n} = Theme;\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-family: ${primaryFont};\r\n  }\r\n\r\n  body {\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n\r\n  ::selection {\r\n      background: ${quaternaryColor};\r\n      color: ${secondaryColor};\r\n  }\r\n`\r\n\r\nexport default GlobalStyle;","import { Home } from './Home';\nimport styled from 'styled-components';\nimport { GlobalStyle } from './Settings/';\nimport LocomotiveScroll from 'locomotive-scroll';\nimport { useEffect } from 'react';\n\nconst AppStyled = styled.div`\n    background-color: white;\n`\n\nfunction App() {\n  useEffect(() => {\n    const scroll = new LocomotiveScroll({\n      el: document.querySelector(\".App\"),\n      lerp: 0.09,\n      reloadOnContextChange: true,\n      smooth: true,\n      smartphone: {\n        smooth: true\n      },\n      tablet: {\n        smooth: true\n      }\n    });\n\n    console.log(scroll);\n  }, [])\n\n  return (\n    <AppStyled className=\"App\">\n      <GlobalStyle />\n      <Home></Home>\n    </AppStyled>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}